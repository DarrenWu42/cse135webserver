# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: 	ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Deploy Website
        uses: appleboy/ssh-action@v0.1.4
        env:
          SITE_PATH: ${{secrets.SITE_PATH}}
          WWW_PATH: ${{secrets.WWW_PATH}}
          CGI_PATH: ${{secrets.CGI_PATH}}
        with:
          host: ${{secrets.SSH_HOST}}
          key: ${{secrets.SSH_KEY}}
          envs: SITE_PATH, WWW_PATH, CGI_PATH
          username: ${{secrets.SSH_USERNAME}}
          
          script: |
            # GIT and BASE PERMISSIONS STEP
            cd ${SITE_PATH} # open site path
            git init        # initialize git
            git remote add origin git@github.com:DarrenWu42/cse135webserver.git # add repo, just in case line
            git stash                              # stash any local changes
            git stash drop                         # delete any (stashed) local changes
            git pull origin main                   # pull from repo
            sudo chgrp -R sudo ${SITE_PATH}        # change group to sudo
            sudo chmod -R a=r,ug+w,a+X ${WWW_PATH} # change to correct permissions
            
            # BUILD STEP
            # allow sh files to be executable, run sh files, then disallow sh files to be executable
            find ${CGI_PATH} -type f -iname "*.sh" -exec sudo chmod ug+x {} \; # allow all sh files in cgi-bin to be executable
            sudo ${CGI_PATH}c/compile-c.sh ${CGI_PATH}c/                       # compile all c files to cgi files
            sudo ${CGI_PATH}go/build-go.sh ${CGI_PATH}go/                      # build all go files to cgi files
            find ${CGI_PATH} -type f -iname "*.sh" -exec sudo chmod ug-x {} \; # disallow all sh in cgi-bin files to be executable

            apxs -i -a -c -n c_programs ${SITE_PATH}/module_development/c_programs.c # build c file to apache module
            
            # PERMISSIONS STEP
            # set permissions for exectuable files cgi, php, pl
            sudo chmod a+x ${CGI_PATH}c/*.cgi     # allow execute on c .cgi files by all
            sudo chmod a+x ${CGI_PATH}go/*.cgi    # allow execute on go .cgi files by all
            sudo chmod a+x ${CGI_PATH}*.js        # allow execute on .js files by all
            sudo chmod a+x ${CGI_PATH}js/*.jss    # allow execute on js .jss files by all
            sudo chmod a+x ${CGI_PATH}jse/*.jss   # allow execute on jse .jss files by all
            sudo chmod a+x ${CGI_PATH}perl/*.pl   # allow execute on perl .pl files by all
            sudo chmod a+x ${CGI_PATH}php/*.php   # allow execute on php .php files by all
            sudo chmod a+x ${CGI_PATH}python/*.py # allow execute on python .py files by all

            # set permissions for db files .json
            sudo chmod a+w ${SITE_PATH}public_html/*.json # allow write on .json files by all
            
            # stop github from thinking files have changed just by changing permission
            git config core.fileMode false

            # restart apache server
            sudo systemctl restart apache2